name: Deploy Application

on:
  push:
    branches: [ master ]

env:
  SERVER_PORT: "22"
  SERVER_PATH: "/home/cube"

jobs:
  create-deployment-artifacts:
    name: Create deployment artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Compile CSS and JavaScript
        run: |
          npm install
          npm run prod

      - name: Configure PHP 8.1
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.1
          extensions: ctype, curl, dom, fileinfo, filter, hash, mbstring, openssl, pcre, PDO, session, tokenizer, xml, bcmath, json, mysql

      - name: Install Composer dependencies
        run: composer install --optimize-autoloader --no-dev --no-interaction --prefer-dist

      - name: Create deployment artifact
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: tar -czf "${GITHUB_SHA}".tar.gz --exclude=*.git --exclude=node_modules --exclude=tests *

      - name: Store artifact for distribution
        uses: actions/upload-artifact@v3
        with:
          name: app-build
          path: ${{ github.sha }}.tar.gz

  prepare-release-on-servers:
    name: "Cube server: Prepare release"
    runs-on: ubuntu-latest
    needs: create-deployment-artifacts
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: app-build
      - name: Upload
        uses: appleboy/scp-action@master
        with:
          host: ${{ vars.SSH_HOST }}
          username: ${{ vars.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: ${{ env.SERVER_PORT }}
          source: ${{ github.sha }}.tar.gz
          target: ${{ env.SERVER_PATH }}/artifacts

      - name: Extract archive and create directories
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha }}
        with:
          host: ${{ vars.SSH_HOST }}
          username: ${{ vars.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: ${{ env.SERVER_PORT }}
          envs: GITHUB_SHA, SERVER_PATH
          script: |
            mkdir -p "${{ env.SERVER_PATH }}/releases/${GITHUB_SHA}"
            tar xzf ${{ env.SERVER_PATH }}/artifacts/${GITHUB_SHA}.tar.gz -C "${{ env.SERVER_PATH }}/releases/${GITHUB_SHA}"
            rm -rf ${{ env.SERVER_PATH }}/releases/${GITHUB_SHA}/storage
            
            mkdir -p ${{ env.SERVER_PATH }}/storage/{app,public,framework,logs}
            mkdir -p ${{ env.SERVER_PATH }}/storage/framework/{cache,sessions,testing,views}
            mkdir -p ${{ env.SERVER_PATH }}/storage/framework/cache/data
            chmod -R 0777 ${{ env.SERVER_PATH }}/storage 

  activate-release:
    name: "Cube server: Activate release"
    runs-on: ubuntu-latest
    needs: [ create-deployment-artifacts, prepare-release-on-servers ]
    steps:
      - name: Activate release
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha }}
          RELEASE_PATH: ${{ env.SERVER_PATH }}/releases/${{ github.sha }}
          ACTIVE_RELEASE_PATH: ${{ env.SERVER_PATH }}/public_html
          STORAGE_PATH: ${{ env.SERVER_PATH }}/storage
          BASE_PATH: ${{ env.SERVER_PATH }}
          LARAVEL_ENV: ${{ secrets.LARAVEL_ENV }}
        with:
          host: ${{ vars.SSH_HOST }}
          username: ${{ vars.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: ${{ env.SERVER_PORT }}
          envs: GITHUB_SHA, RELEASE_PATH, ACTIVE_RELEASE_PATH, STORAGE_PATH, BASE_PATH, ENV_PATH, LARAVEL_ENV
          script: |
            printf "%s" "$LARAVEL_ENV" > "${BASE_PATH}/.env"
            ln -s -f ${BASE_PATH}/.env $RELEASE_PATH
            ln -s -f $STORAGE_PATH $RELEASE_PATH
            ln -s -n -f $RELEASE_PATH/public $ACTIVE_RELEASE_PATH

  run-after-hooks:
    name: "Cube server: After hook"
    runs-on: ubuntu-latest
    needs: [ create-deployment-artifacts, prepare-release-on-servers, activate-release ]
    steps:
      - name: Run after hooks
        uses: appleboy/ssh-action@master
        env:
          LARAVEL_APP_PATH: ${{ env.SERVER_PATH }}/releases/${{ github.sha }}
        with:
          host: ${{ vars.SSH_HOST }}
          username: ${{ vars.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: ${{ env.SERVER_PORT }}
          envs: LARAVEL_APP_PATH
          script: |
            cd $LARAVEL_APP_PATH
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            echo "Laravel Production Optimization Finished"

  clean-up:
    name: "Cube server: Clean up"
    runs-on: ubuntu-latest
    needs: [ create-deployment-artifacts, prepare-release-on-servers, activate-release, run-after-hooks ]
    steps:
      - name: Run after hooks
        uses: appleboy/ssh-action@master
        env:
          RELEASES_PATH: ${{ env.SERVER_PATH }}/releases
          ARTIFACTS_PATH: ${{ env.SERVER_PATH }}/artifacts
        with:
          host: ${{ vars.SSH_HOST }}
          username: ${{ vars.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: ${{ env.SERVER_PORT }}
          envs: RELEASES_PATH, ARTIFACTS_PATH
          script: |
            cd $RELEASES_PATH && ls -t -1 | tail -n +6 | xargs rm -rf
            cd $ARTIFACTS_PATH && ls -t -1 | tail -n +6 | xargs rm -rf
